// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Order.DataAccess;

#nullable disable

namespace Order.DataAccess.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    partial class OrderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Order.DataAccess.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Price = 15.0,
                            Quantity = 5,
                            Title = "How to get a good grade in DOS in 40 minutes a day"
                        },
                        new
                        {
                            BookId = 2,
                            Price = 20.0,
                            Quantity = 3,
                            Title = "RPCs for Noobs"
                        },
                        new
                        {
                            BookId = 3,
                            Price = 15.0,
                            Quantity = 5,
                            Title = "Xen and the Art of Surviving Undergraduate School."
                        },
                        new
                        {
                            BookId = 4,
                            Price = 15.0,
                            Quantity = 5,
                            Title = "Cooking for the Impatient Undergrad."
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
